**********************
*     Assignment 1   *
**********************
> Create "guardian_info" & "students_otherinfo"
  Tables in "BECM19_DB" database with the 
  following structure

	"guardian_info"
	==============================
	1. regno 		int(10)(PK)
	2. gfirstname	varchar(50)
	3. gmiddlename	varchar(50)
	4. glastname	varchar(50)

	"students_otherinfo"
	==============================
	1. regno 		int(10)(PK)
	2. isadmin		varchar(1)
	3. password		varchar(50)

> Insert regno 1 to 5 data into above tables

> While inserting data to "students_otherinfo" make 
  regno 1 "isadmin" value as "Y" and rest as "N"
  
  
  
  
  
  
> Create one more table by name "student_address" 
  with the following structure  
  
   "student_address"
	==============================
	1. regno 			int(10)(PK)
	2. address_type		varchar(10) (PK)
	3. address1			varchar(50)
	4. address2			varchar(50)
	5. city				varchar(50)
	5. pincode			int(6)
  
Note:-   
--------
Combination of "regno" & "address_type" should be
a Primary Key i.e. Composite Key

Queries :
===========
create table guardian_info
( regno int(10) not null,
  gfirstname varchar(50),
  gmiddlename varchar(50),
  glastname varchar(50),
  primary key(regno)
);





create table students_otherinfo
( regno int(10) not null,
  isadmin varchar(1),
  password varchar(50),
  primary key(regno)
);


**********************
*     Assignment 2   *
**********************  
  
> Write a Java Program which takes following input 
  arguments via Commond Line in the "same order" & 
  insert the data into corresponding tables
	1. Reg No. 
	2. First Name
	3. Middle Name
	4. Last Name
	5. Guardian First Name 
	6. Guardian Middle Name 
	7. Guardian Last Name 
	8. isadmin & 
	9. Password
	
















package com.jspiders.jdbc.common;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class TransactionExample 
{
	public static void main(String[] args) 
	{
		Connection con = null;
		PreparedStatement pstmt1 = null;
		PreparedStatement pstmt2 = null;
		PreparedStatement pstmt3 = null;
		
		try 
		{
			//1. Load the Driver
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			
			//2. Get the DB Connection via Driver
			String dbUrl = "jdbc:mysql://localhost:3306/BECM4_DB?user=j2ee&password=j2ee";
			con = DriverManager.getConnection(dbUrl);
			
			//3. Issue SQL Queries via Connection
			String query1 = " insert into students_info " 
							+" values (?,?,?,?) ";
			
			pstmt1 = con.prepareStatement(query1);
			pstmt1.setInt(1, Integer.parseInt(args[0]) );
			pstmt1.setString(2, args[1]);
			pstmt1.setString(3, args[2]);
			pstmt1.setString(4, args[3]);
			int count1 = pstmt1.executeUpdate();
			System.out.println("Rows Affected Count for SI : "+count1);
			
			String query2 = " insert into guardian_info " 
							+" values (?,?,?,?) ";
			pstmt2 = con.prepareStatement(query2);
			pstmt2.setInt(1, Integer.parseInt(args[0]) );
			pstmt2.setString(2, args[4]);
			pstmt2.setString(3, args[5]);
			pstmt2.setString(4, args[6]);
			int count2 = pstmt2.executeUpdate();
			System.out.println("Rows Affected Count for GI : "+count2);
			
			String query3 = " insert into students_otherinfo " 
							+" values (?,?,?) ";
			pstmt3 = con.prepareStatement(query3);
			pstmt3.setInt(1, Integer.parseInt(args[0]) );
			pstmt3.setString(2, args[7]);
			pstmt3.setString(3, args[8]);
			
			int count3 = pstmt3.executeUpdate();
			System.out.println("Rows Affected Count for SOI : "+count3);
	
			//4. Process the Results returned by SQL Queries
			System.out.println("Successfully Created the Profile ...");
			
		} catch (Exception e) {
			System.err.println("Unable to Create the Profile !!!");
			e.printStackTrace();
		} finally{
			//5. Close ALL JDBC Objects
			try 
			{
				if(con!=null){
					con.close();
				}
				if(pstmt1!=null){
					pstmt1.close();
				}
				if(pstmt2!=null){
					pstmt2.close();
				}
				if(pstmt3!=null){
					pstmt3.close();
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}//End of outer try catch block
	}//End of Main
}//End of Class
  
  
  

  
  
  
  
  
  
  
> Write a Java Program which accepts following 
  input arguments in the same order 
  1. Reg No. 
  2. Current Password
  3. New Password
  
> This Program first check whether Reg No. & 
  Current Password is matching
  
> If NO, then print the "Error Message" 
  in Console
  
> If YES, then print the "Success Message" in
  Console along with updating the password for 
  that Reg No.





update students_otherinfo
set password = ?
where regno = ?
and password = ?






package com.jspiders.jdbc.common;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class ChangePasswordExample 
{
	public static void main(String[] args) 
	{
		String regNum = args[0];
		String currentPass = args[1];
		String newPass = args[2];
			
		Connection con = null;
		PreparedStatement pstmt = null;
		
		try 
		{
			//1. Load the Driver
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			
			//2. Get the DB Connection via Driver 
			String dbUrl = "jdbc:mysql://localhost:3306/BECM4_DB?user=j2ee&password=j2ee";
			con = DriverManager.getConnection(dbUrl);
			
			//3. Issue SQL Queries via Connection 
			String query = " update students_otherinfo " 
							+" set password = ? " 
							+" where regno = ? " 
							+" and password = ? ";
			
			pstmt = con.prepareStatement(query);
			pstmt.setString(1, newPass);
			pstmt.setInt(2, Integer.parseInt(regNum) );
			pstmt.setString(3, currentPass);
			
			int count = pstmt.executeUpdate();
			
			//4. Process the Results returned by SQL Queries
			if(count>0)
			{
				System.out.println("Password Change Successful");
			}else{
				System.err.println("Invalid Reg. No. / Password");
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally{
			//5. Close All JDBC Objects
			try 
			{
				if(con!=null){
					con.close();
				}
				if(pstmt!=null){
					pstmt.close();
				}
				
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}//End of outer try-catch block
	}//End of Main
}//End of Class
  
  

  
  
  